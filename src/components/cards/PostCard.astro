---
import type { InferEntrySchema } from 'astro:content';
import { Image } from 'astro:assets';
import type { NavigationItem } from '@utils/types';
import { generateTagItem } from '@utils/scripts';

interface Props {
  postMeta: InferEntrySchema<'posts'>;
  index: number;
}

const { postMeta, index }: Props = Astro.props;

const postLink: string = `/posts/${postMeta.slug}`;
const tags: NavigationItem[] = postMeta.tags.map((tag: string) =>
  generateTagItem(tag)
);
const loadingSchema: 'eager' | 'lazy' = index > 0 ? 'lazy' : 'eager';
---

<article class="post-card-big">
  <div>
    <a href={postLink} tabindex={-1}>
      <Image
        class="featured-image image--default"
        src={postMeta.image.url}
        alt={postMeta.image.alt}
        width="768"
        height="768"
        decoding="async"
        loading={loadingSchema}
      />
    </a>
  </div>
  <div class="description">
    <header>
      <span class="date font-hgv-uppercase">
        {postMeta.datePublished}
      </span>
      <h2 class="title font-hgv-regular">
        <a class="link--primary" href={postLink}>{postMeta.title}</a>
      </h2>
    </header>
    <div class="excerpt font-hgv-light">
      <p>
        {postMeta.excerpt}
      </p>
    </div>
  </div>
  <div class="meta">
    <div>
      <a class="read-more-link link--primary font-hgv-uppercase" href={postLink}
        >Read more</a
      >
    </div>
    <div>
      <ul class="tags" role="list">
        {
          tags.map((tag: NavigationItem) => (
            <li>
              <a class="link--tag font-hgv-regular" href={`/tags/${tag.url}`}>
                {tag.title}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</article>

<style lang="scss">
  .post-card-big {
    display: flex;
    flex-direction: column;
    gap: var(--space-30-40);

    &:not(:last-child) {
      padding-bottom: var(--space-30-40);
      border-bottom: var(--color-bg-secondary) solid 1px;
    }
  }

  .description {
    display: flex;
    flex-direction: column;
    gap: var(--space-10-20);
  }

  .date {
    font-size: var(--font-size-2xs);
  }

  .title {
    font-size: var(--font-size-xl);
  }

  .excerpt {
    font-size: var(--font-size-s);
  }

  .meta {
    display: flex;
    justify-content: space-between;
    align-items: center;

    @media only screen and (width <= 768px) {
      flex-direction: column-reverse;
      gap: var(--space-30-40);
      align-items: flex-start;
    }
  }

  .read-more-link {
    font-size: var(--font-size-2xs);
  }

  .tags {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: 15px;
  }

  .featured-image {
    width: 100%;
    height: auto;
    aspect-ratio: auto;
  }
</style>
