---
import type { InferEntrySchema } from 'astro:content';
import { Image } from 'astro:assets';
import type { NavigationItem } from '@utils/types';
import { generateTagItem } from '@utils/scripts';

interface Props {
  postMeta: InferEntrySchema<'posts'>;
  index: number;
}

const { postMeta, index }: Props = Astro.props;

const postLink: string = `/posts/${postMeta.slug}`;
const tags: NavigationItem[] = postMeta.tags.map((tag: string) =>
  generateTagItem(tag)
);
const loadingSchema: 'eager' | 'lazy' = index > 0 ? 'lazy' : 'eager';
---

<article class="post-card-wrapper">
  <a href={postLink} tabindex={-1}>
    <Image
      class="image image--default"
      src={postMeta.image.url}
      alt={postMeta.image.alt}
      width="800"
      height="800"
      decoding="async"
      loading={loadingSchema}
    />
  </a>
  <header class="heading">
    <h2>
      <a class="title font-hgv-regular link--primary" href={postLink}>
        {postMeta.title}
      </a>
    </h2>
    <div class="meta">
      <p class="date font-hgv-uppercase">
        {postMeta.datePublished}
      </p>
      <ul class="tags" role="list">
        {
          tags.map((tag: NavigationItem) => (
            <li class="tag font-hgv-uppercase">
              <a class="link--secondary" href={`/tags/${tag.url}`}>
                {tag.title}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </header>
  <p class="excerpt font-hgv-light">
    {postMeta.excerpt}
  </p>
  <a class="read-more-link link--secondary font-hgv-uppercase" href={postLink}>
    Read more
  </a>
</article>

<style lang="scss">
  .post-card-wrapper {
    display: flex;
    flex-direction: column;
    gap: var(--space-15-20);

    &:not(:last-child) {
      padding-bottom: var(--space-30-40);
      border-bottom: var(--color-bg-secondary) solid 1px;
    }
  }

  .image {
    width: 100%;
    height: auto;
    aspect-ratio: auto;
  }

  .heading {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .title {
    font-size: var(--font-size-xl);
  }

  .meta {
    display: flex;
    align-items: baseline;
    gap: var(--space-30-40);

    @media only screen and (width <= 800px) {
      flex-direction: column;
      align-items: flex-start;
      gap: 10px;
    }
  }

  .date {
    font-size: var(--font-size-2xs);
    color: var(--color-secondary);
  }

  .tags {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: var(--space-15-20);
    row-gap: 10px;
  }

  .tag {
    font-size: var(--font-size-2xs);
  }

  .excerpt {
    font-size: var(--font-size-s);
  }

  .read-more-link {
    font-size: var(--font-size-2xs);
  }
</style>
